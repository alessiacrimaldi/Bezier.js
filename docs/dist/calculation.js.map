{"version":3,"file":"calculation.js","sources":["../../lib/calculation.js"],"sourcesContent":["import { Bezier } from \"./bezier.js\";\r\n\r\n\r\nexport function getCurve(xt, yt, writeon) {\r\n    var curve, type;\r\n    if (xt.length == 3 && yt.length == 3) {\r\n        curve = new Bezier(xt[0], yt[0], xt[1], yt[1], xt[2], yt[2]);\r\n        type = \"quadratic\";\r\n    } else if (xt.length == 4 && yt.length == 4) {\r\n        curve = new Bezier(xt[0], yt[0], xt[1], yt[1], xt[2], yt[2], xt[3], yt[3]);\r\n        type = \"cubic\";\r\n    } else {\r\n        throw new Error(\"Invalid curve input control points.\");\r\n    }\r\n    if (writeon) {\r\n        console.log(`BÃ©zier ${type} curve:\\n`, curve);\r\n    }\r\n    return curve;\r\n}\r\n\r\nexport function calculateCurvePoints(curve) {\r\n    var steps = 1000;\r\n    for (let i = 0, p, t; i < steps; i++) {\r\n        t = i / (steps - 1);\r\n        p = curve.compute(t);\r\n        p.t = t;\r\n        curve._lut.push(p);\r\n    }\r\n    return curve._lut;\r\n}\r\n\r\nexport function getLookUpTable(curve, steps = 100) {\r\n    curve.getLUT(steps);\r\n    return curve._lut;\r\n}\r\n\r\nexport function calculateLength(curve) {\r\n    return curve._curvelength = curve.length();\r\n}\r\n\r\nexport function getCurvePoint(curve, t, writeon) {\r\n    if (!writeon) {\r\n        return curve.get(t);\r\n    } else {\r\n        return curve._curvepoint = curve.get(t);\r\n    }\r\n}\r\n\r\nexport function calculateTangent(curve, t) {\r\n    var dv = curve.derivative(t);\r\n    dv.x *= (1 / (curve._t2 - curve._t1));\r\n    dv.y *= (1 / (curve._t2 - curve._t1));\r\n    return curve._derivative = dv;\r\n}\r\n\r\nexport function calculateTangents(curve, gap) {\r\n    var dv = [];\r\n    for (var t = 0, i = 0; t <= 1; t += gap, i++) {\r\n        dv[i] = curve.derivative(t);\r\n        dv[i].x *= (1 / (curve._t2 - curve._t1));\r\n        dv[i].y *= (1 / (curve._t2 - curve._t1));\r\n    }\r\n    return curve._derivatives = dv;\r\n}\r\n\r\nexport function calculateNormal(curve, t, writeoff) {\r\n    if (writeoff) {\r\n        return { x: curve.normal(t).x, y: curve.normal(t).y, t: t };\r\n    } else {\r\n        return curve._normal = { x: curve.normal(t).x, y: curve.normal(t).y, t: t };\r\n    }\r\n}\r\n\r\nexport function calculateNormals(curve, gap) {\r\n    var normals = [];\r\n    for (var t = 0, i = 0; t <= 1; t += gap, i++) {\r\n        normals[i] = { x: curve.normal(t).x, y: curve.normal(t).y, t: t };\r\n    }\r\n    return curve._normals = normals;\r\n}\r\n\r\nexport function splitCurve(curve, t1, t2) {\r\n    if (t2) {\r\n        return curve._subcurve = curve.split(t1, t2);\r\n    } else {\r\n        return curve._subcurves = [curve.split(t1).left, curve.split(t1).right];\r\n    }\r\n}\r\n\r\nexport function calculateCurveExtremas(curve) {\r\n    return curve._extremas = curve.extrema();\r\n}\r\n\r\nexport function calculateInflectionPoints(curve) {\r\n    return curve._inflectionpoints = curve.inflections();\r\n}\r\n\r\nexport function calculateCurvature(curve, t) {\r\n    return curve._curvature = { k: curve.curvature(t).k, r: curve.curvature(t).r, t: t };\r\n}\r\n\r\nexport function calculateCurvatures(curve, gap = 2) {\r\n    var kr = [];\r\n    for (var s = 0, i = 0; s < 256; s += gap, i++) {\r\n        let t = s / 255;\r\n        kr[i] = { k: curve.curvature(t).k, r: curve.curvature(t).r, t: t };\r\n    }\r\n    return curve._curvatures = kr;\r\n}\r\n\r\nexport function calculateBoundingBox(curve) {\r\n    return curve._boundingbox = curve.bbox();\r\n}\r\n\r\nexport function calculateHullPoints(curve, t) {\r\n    return curve._hullpoints = curve.hull(t);\r\n}\r\n\r\nexport function calculateClosestPoint(curve, point) {\r\n    return curve._projectpoint = curve.project(point);\r\n}\r\n\r\nexport function calculateOffset(curve, d, t) {\r\n    if (t) {\r\n        return curve._offsetpoint = curve.offset(t, d);\r\n    } else {\r\n        return curve._offsetcurves = curve.offset(d);\r\n    }\r\n}\r\n\r\nexport function calculateReducedCurve(curve) {\r\n    return curve._reducedcurves = curve.reduce();\r\n}\r\n\r\nexport function calculateArcs(curve, threshold = 0.5) {\r\n    return curve._arcs = curve.arcs(threshold);\r\n}\r\n\r\nexport function calculateScaledCurve(curve, reduced) {\r\n    var scaledCurves = [];\r\n    for (var d = -30, k = 0; d <= 30; d += 10, k++) {\r\n        scaledCurves[k] = reduced.scale(d);\r\n    }\r\n    return curve._scaledcurves = scaledCurves;\r\n}\r\n\r\nexport function calculateOutline(curve, d1, d2, d3, d4) {\r\n    if (d4) {\r\n        return curve._outline = curve.outline(d1, d2, d3, d4);\r\n    } else if (d3) {\r\n        return curve._outline = curve.outline(d1, d2, d3);\r\n    } else if (d2) {\r\n        return curve._outline = curve.outline(d1, d2);\r\n    } else {\r\n        return curve._outline = curve.outline(d1);\r\n    }\r\n}\r\n\r\nexport function calculateShapedOutline(curve, d1, d2, threshold) {\r\n    if (threshold) {\r\n        return curve._shapedoutline = curve.outlineshapes(d1, d2, threshold);\r\n    } else if (d2) {\r\n        return curve._shapedoutline = curve.outlineshapes(d1, d2);\r\n    } else {\r\n        return curve._shapedoutline = curve.outlineshapes(d1);\r\n    }\r\n}\r\n\r\nexport function calculateIntersection(curve, other, threshold = 0.5) {\r\n    if (other) {\r\n        if (other instanceof Bezier) {\r\n            return curve._intersection = curve.intersects(other, threshold);\r\n        } else {\r\n            return curve._intersection = curve.intersects(other);\r\n        }\r\n    } else {\r\n        if (curve.order == 2) {\r\n            return curve._intersection = \"no self intersection\";\r\n        } else if (curve.order == 3) {\r\n            return curve._intersection = curve.intersects();\r\n        }\r\n    }\r\n}\r\n\r\n// utils\r\nexport function getOffsetCurve(curve, a, b) {\r\n    if (b) {\r\n        return curve.offset(a, b);\r\n    } else {\r\n        return curve.offset(a);\r\n    }\r\n}"],"names":["getCurve","xt","yt","writeon","curve","type","Bezier","calculateCurvePoints","steps","i","p","t","getLookUpTable","calculateLength","getCurvePoint","calculateTangent","dv","calculateTangents","gap","calculateNormal","writeoff","calculateNormals","normals","splitCurve","t1","t2","calculateCurveExtremas","calculateInflectionPoints","calculateCurvature","calculateCurvatures","kr","s","calculateBoundingBox","calculateHullPoints","calculateClosestPoint","point","calculateOffset","d","calculateReducedCurve","calculateArcs","threshold","calculateScaledCurve","reduced","scaledCurves","k","calculateOutline","d1","d2","d3","d4","calculateShapedOutline","calculateIntersection","other","getOffsetCurve","a","b"],"mappings":"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"}