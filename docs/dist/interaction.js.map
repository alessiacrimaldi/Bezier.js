{"version":3,"file":"interaction.js","sources":["../../lib/interaction.js"],"sourcesContent":["export default function handleInteraction(cvs, movable, update) {\r\n    const ctx = cvs.getContext(\"2d\");\r\n    let isMoving = false,\r\n        mx = 0,\r\n        my = 0,\r\n        sx = 0,\r\n        sy = 0,\r\n        points,\r\n        selectedPoint,\r\n        selectedCurve;\r\n\r\n    const isMouseNearPoint = (p) => Math.abs(mx - p.x) < 10 && Math.abs(my - p.y) < 10\r\n\r\n    cvs.addEventListener(\"mousedown\", (e) => {\r\n        mx = e.offsetX;\r\n        my = e.offsetY;\r\n\r\n        if (movable.length > 1) {\r\n            movable.forEach(c => {\r\n                points = c.points;\r\n                points.forEach(p => {\r\n                    if (isMouseNearPoint(p)) {\r\n                        isMoving = true;\r\n                        selectedPoint = p; // pointer at curve's point\r\n                        selectedCurve = c; // pointer at curve\r\n                        sx = p.x;\r\n                        sy = p.y;\r\n                        return;\r\n                    }\r\n                })\r\n            })\r\n        } else {\r\n            points = movable.points;\r\n            points.forEach(p => {\r\n                if (isMouseNearPoint(p)) {\r\n                    isMoving = true;\r\n                    selectedPoint = p; // pointer at curve's point\r\n                    sx = p.x;\r\n                    sy = p.y;\r\n                    return;\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    cvs.addEventListener(\"mousemove\", (e) => {\r\n        if (!isMoving) return;\r\n\r\n        /* Update the coordinates of the selected point with the mouse\r\n        coordinates, considering the initial offset. */\r\n\r\n        /* Since selectedPoint is a pointer to the selected point (moved),\r\n        the coordinates of the point in the selected curve are updated\r\n        when selectedPoint is updated. */\r\n\r\n        selectedPoint.x = sx + (e.offsetX - mx);\r\n        selectedPoint.y = sy + (e.offsetY - my);\r\n        selectedCurve ? selectedCurve.update() : movable.update();\r\n        ctx.clearRect(0, 0, cvs.width, cvs.height);\r\n        update();\r\n    })\r\n\r\n    cvs.addEventListener(\"mouseup\", (e) => {\r\n        isMoving = false;\r\n        selectedPoint = undefined;\r\n        selectedCurve = undefined;\r\n    })\r\n}"],"names":[],"mappings":"AAAe,SAAS,kBAAkB,KAAK,SAAS,QAAQ;AAC5D,QAAM,MAAM,IAAI,WAAW,IAAI;AAC/B,MAAI,WAAW,OACX,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,QACA,eACA;AAEJ,QAAM,mBAAmB,CAAC,MAAM,KAAK,IAAI,KAAK,EAAE,CAAC,IAAI,MAAM,KAAK,IAAI,KAAK,EAAE,CAAC,IAAI;AAEhF,MAAI,iBAAiB,aAAa,CAAC,MAAM;AACrC,SAAK,EAAE;AACP,SAAK,EAAE;AAEP,QAAI,QAAQ,SAAS,GAAG;AACpB,cAAQ,QAAQ,OAAK;AACjB,iBAAS,EAAE;AACX,eAAO,QAAQ,OAAK;AAChB,cAAI,iBAAiB,CAAC,GAAG;AACrB,uBAAW;AACX,4BAAgB;AAChB,4BAAgB;AAChB,iBAAK,EAAE;AACP,iBAAK,EAAE;AACP;AAAA,UACH;AAAA,QACrB,CAAiB;AAAA,MACjB,CAAa;AAAA,IACb,OAAe;AACH,eAAS,QAAQ;AACjB,aAAO,QAAQ,OAAK;AAChB,YAAI,iBAAiB,CAAC,GAAG;AACrB,qBAAW;AACX,0BAAgB;AAChB,eAAK,EAAE;AACP,eAAK,EAAE;AACP;AAAA,QACH;AAAA,MACjB,CAAa;AAAA,IACJ;AAAA,EACT,CAAK;AAED,MAAI,iBAAiB,aAAa,CAAC,MAAM;AACrC,QAAI,CAAC;AAAU;AASf,kBAAc,IAAI,MAAM,EAAE,UAAU;AACpC,kBAAc,IAAI,MAAM,EAAE,UAAU;AACpC,oBAAgB,cAAc,OAAQ,IAAG,QAAQ,OAAM;AACvD,QAAI,UAAU,GAAG,GAAG,IAAI,OAAO,IAAI,MAAM;AACzC;EACR,CAAK;AAED,MAAI,iBAAiB,WAAW,CAAC,MAAM;AACnC,eAAW;AACX,oBAAgB;AAChB,oBAAgB;AAAA,EACxB,CAAK;AACL;"}